{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/src/components/Test/Testone.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect, withRouter, NavLink } from \"react-router-dom\";\nimport \"./Test.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport axiosService from \"../../services/axios-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport SupplierSuggestions from './SupplierSuggestion';\nimport { SuccessModal } from \"./SuccessModal\";\nvar initialState = {\n  btnstatus: false,\n  query: '',\n  supplier: \"\",\n  source: \"\",\n  sample_location: \"\",\n  weight: \"\",\n  agg_type: \"\",\n  agg_type1: \"\",\n  agg_type2: \"\",\n  agg_type3: \"\",\n  weight_balance: \"\",\n  weight_sample_testing: \"\",\n  weight_sample_sieving: \"\",\n  material_passing: \"\",\n  pto_comment: \"\",\n  total: \"\",\n  plant: \"\",\n  supl: []\n};\nexport var Aggregate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Aggregate, _Component);\n\n  function Aggregate(props) {\n    var _this;\n\n    _classCallCheck(this, Aggregate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Aggregate).call(this, props));\n\n    _this.componentWillMount = function () {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = \"0\" + dd;\n      }\n\n      if (mm < 10) {\n        mm = \"0\" + mm;\n      }\n\n      today = mm + \"/\" + dd + \"/\" + yyyy;\n      console.log(\"date here\", today);\n      _this.state.date = today;\n      console.log(_this.state.date);\n    };\n\n    _this.change = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.getInfo =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var vendor_name, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              vendor_name = _this.state.query;\n              _context.next = 4;\n              return axios.get(\"\".concat(API_URL, \"master/vendor_search?VENDOR_NAME=\").concat(vendor_name), axios.defaults.headers.common[\"x-access-token\"] = localStorage.getItem(\"token\"));\n\n            case 4:\n              response = _context.sent;\n              // console.log(response.data.User);\n              //console.log(this.state.supl);\n              console.log('response hwew', response);\n\n              if (!response.data.success) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 9;\n              return _this.setState({\n                supl: response.data.VENDOR_NAME\n              });\n\n            case 9:\n              console.log(_this.state.supl);\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    _this.handleInputChange = function (e) {\n      console.log(e.target.value);\n\n      _this.setState({\n        query: e.target.value\n      }, function () {\n        if (_this.state.query && _this.state.query.length > 1) {\n          if (_this.state.query.length % 2 === 0) {\n            _this.getInfo();\n          }\n        } else if (!_this.state.query) {}\n      });\n    };\n\n    _this.totalshow = function (e) {\n      e.preventDefault();\n      var total_sample_sieving = _this.state.weight_sample_sieving;\n      var total_sample_testing = _this.state.weight_sample_testing;\n      var total_amount = (total_sample_testing - total_sample_sieving) / total_sample_testing * 100;\n      _this.state.total = total_amount.toFixed(2);\n      console.log(total_amount);\n\n      _this.setState({\n        amount_status: true\n      });\n    };\n\n    _this.state = {\n      initialState: initialState,\n      formstatus: false,\n      amount_status: false,\n      uppercardstatus: true\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator();\n    return _this;\n  }\n\n  _createClass(Aggregate, [{\n    key: \"showformhandle\",\n    value: function showformhandle() {\n      var doesShow = this.state.formstatus;\n      this.setState({\n        formstatus: !doesShow\n      });\n      this.setState(initialState);\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        visible: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var tokenvalue, type, body, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                if (!this.validator.allValid()) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                tokenvalue = localStorage.getItem(\"token\");\n\n                if (this.state.formstatus) {\n                  type = 'RF_14';\n                } else {\n                  type = 'RF_13';\n                }\n\n                body = {\n                  supplier: this.state.query,\n                  source: this.state.source,\n                  sample_location: this.state.sample_location,\n                  weight: this.state.weight,\n                  agg_type: this.state.agg_type,\n                  weight_balance: this.state.weight_balance,\n                  weight_sample_testing: this.state.weight_sample_testing,\n                  weight_sample_sieving: this.state.weight_sample_sieving,\n                  material_passing: this.state.total,\n                  pto_comment: this.state.pto_comment,\n                  plant: localStorage.getItem(\"plant_name\"),\n                  date: this.state.date,\n                  type: type\n                };\n                console.log(body);\n                this.openModal();\n                this.setState({\n                  btnstatus: true\n                });\n                _context2.prev = 8;\n                _context2.next = 11;\n                return axios.post(\"\".concat(API_URL, \"rf_form/submit\"), body, axios.defaults.headers.common[\"x-access-token\"] = tokenvalue);\n\n              case 11:\n                response = _context2.sent;\n                console.log(response); //   .then(console.log(this.state));\n\n                if (response.data === 'success') {\n                  // alert(response.data);\n                  this.props.history.push(\"/ViewTestOne\");\n                } else {\n                  alert(response.data);\n                }\n\n                _context2.next = 19;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](8);\n                console.log(_context2.t0);\n\n              case 19:\n                _context2.next = 23;\n                break;\n\n              case 21:\n                this.validator.showMessages(); // rerender to show messages for the first time\n\n                this.forceUpdate();\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[8, 16]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let showmodal;\n      var sbmtbtn, btnmsg, uppercardinfo13, uppercardinfo14;\n\n      if (this.state.uppercardstatus) {\n        uppercardinfo13 = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"custom-content-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Plant\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, localStorage.getItem(\"plant_name\")))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"date\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, this.state.date))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Supplier\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          list: \"browsers\",\n          name: \"query\",\n          value: this.state.query,\n          onChange: function onChange(e) {\n            return _this2.handleInputChange(e);\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), React.createElement(\"datalist\", {\n          id: \"browsers\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, this.state.supl ? this.state.supl.map(function (item, id) {\n          return React.createElement(\"option\", {\n            value: item.VENDOR_NAME,\n            key: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          });\n        }) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"Data is loading....\")), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, this.validator.message(\"supplier\", this.state.query, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, \"Source\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"source\",\n          value: this.state.source,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, this.validator.message(\"source\", this.state.source, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"Sampling Location\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          value: this.state.sample_location,\n          name: \"sample_location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"None\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, \"Choose...\"), React.createElement(\"option\", {\n          value: \"Truck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, \"Truck\"), React.createElement(\"option\", {\n          value: \"Bin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \"Bin\"), React.createElement(\"option\", {\n          value: \"StockYard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, \"StockYard\")), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, this.validator.message(\"sample location\", this.state.sample_location, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputSubcategory\",\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"Weight of Sample For Testing\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight\",\n          value: this.state.weight,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, this.validator.message(\" Weight of sample for testing\", this.state.weight, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-3 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, \"Aggregate Type\"), React.createElement(\"div\", {\n          class: \"col-sm-9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-check form-check-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"inlineCheckbox1\",\n          value: \"River Sand\",\n          name: \"agg_type\",\n          onClick: function onClick(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"River Sand\")), React.createElement(\"div\", {\n          className: \"form-check form-check-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"inlineCheckbox1\",\n          value: \"Crushed Rock Fines\",\n          name: \"agg_type\",\n          onClick: function onClick(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, \"Crushed Rock Fines\"), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, this.validator.message(\"aggregate type\", this.state.agg_type, \"required\")))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-3 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, \"Weighing Balance Details\"), React.createElement(\"div\", {\n          class: \"col-sm-9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_balance\",\n          value: this.state.weight_balance,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, this.validator.message(\"weight balance details\", this.state.weight_balance, \"required\"))))))));\n        uppercardinfo14 = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"custom-content-form\",\n          autoComplete: \"OFF\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, \"Plant\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, localStorage.getItem(\"plant_name\")))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, \"date\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, this.state.date))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, \"Supplier\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          list: \"browsers\",\n          name: \"query\",\n          value: this.state.query,\n          onChange: function onChange(e) {\n            return _this2.handleInputChange(e);\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }), React.createElement(\"datalist\", {\n          id: \"browsers\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, this.state.supl ? this.state.supl.map(function (item, id) {\n          return React.createElement(\"option\", {\n            value: item.VENDOR_NAME,\n            key: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454\n            },\n            __self: this\n          });\n        }) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, \"Data is loading....\")), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, this.validator.message(\"supplier\", this.state.query, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476\n          },\n          __self: this\n        }, \"Source\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"source\",\n          value: this.state.source,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }, this.validator.message(\"source\", this.state.source, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }, \"Sampling Location\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          value: this.state.sample_location,\n          name: \"sample_location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"None\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }, \"Choose...\"), React.createElement(\"option\", {\n          value: \"Truck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          },\n          __self: this\n        }, \"Truck\"), React.createElement(\"option\", {\n          value: \"Bin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          },\n          __self: this\n        }, \"Bin\"), React.createElement(\"option\", {\n          value: \"StockYard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, \"StockYard\")), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, this.validator.message(\"sample location\", this.state.sample_location, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputSubcategory\",\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, \"Weight of Sample For Testing\"), React.createElement(\"div\", {\n          class: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight\",\n          value: this.state.weight,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537\n          },\n          __self: this\n        }, this.validator.message(\" Weight of sample for testing\", this.state.weight, \"required\"))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-3 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549\n          },\n          __self: this\n        }, \"Aggregate Type\"), React.createElement(\"div\", {\n          class: \"col-sm-9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-check form-check-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"inlineCheckbox1\",\n          value: \"River Sand\",\n          name: \"agg_type\",\n          onClick: function onClick(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }, \"River Sand\")), React.createElement(\"div\", {\n          className: \"form-check form-check-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"inlineCheckbox1\",\n          value: \"Crushed Rock Fines\",\n          name: \"agg_type\",\n          onClick: function onClick(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }, \"Crushed Rock Fines\"), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591\n          },\n          __self: this\n        }, this.validator.message(\"aggregate type\", this.state.agg_type, \"required\")))))), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-3 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604\n          },\n          __self: this\n        }, \"Weighing Balance Details\"), React.createElement(\"div\", {\n          class: \"col-sm-9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_balance\",\n          value: this.state.weight_balance,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, this.validator.message(\"weight balance details\", this.state.weight_balance, \"required\"))))))));\n      }\n\n      if (this.state.visible) {// showmodal = (\n        //   <div>\n        //     <SuccessModal  \n        //          visible={this.state.visible}\n        //               width={this.props.width}\n        //               height={this.props.height}\n        //               effect={this.props.effect}\n        //               onClickAway={() => this.closeModal()} />\n        //   </div>\n        // )\n      }\n\n      if (this.state.btnstatus) {\n        sbmtbtn = React.createElement(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: this.onSubmit.bind(this),\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        }, \"Submit\");\n        btnmsg = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656\n          },\n          __self: this\n        }, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658\n          },\n          __self: this\n        }, \"Your Form Has Already Been Submitted.Please Don't Click SUMBIT Button AGAIN!!\"));\n      } else {\n        sbmtbtn = React.createElement(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: this.onSubmit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665\n          },\n          __self: this\n        }, \"Submit\");\n      }\n\n      var buttontext;\n\n      if (this.props.match.url == \"/Testone\") {\n        buttontext = React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\",\n            color: \"forestgreen\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }, \"Slit Content\");\n      }\n\n      var display_total_amount;\n\n      if (this.state.amount_status == true) {\n        display_total_amount = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689\n          },\n          __self: this\n        }, this.state.total, \" %\");\n      } else {\n        display_total_amount = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 693\n          },\n          __self: this\n        }, \"Enter The Above Fields\"));\n      }\n\n      var buttontitle = \"click to see RF 14\";\n      var formtext;\n      var testformtext;\n      var formheadertext;\n\n      if (this.state.formstatus) {\n        buttontitle = \"click to see RF 13\";\n        testformtext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 704\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"below-custom-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 706\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 707\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708\n          },\n          __self: this\n        }, \"Test Details\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 709\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710\n          },\n          __self: this\n        }))), React.createElement(\"form\", {\n          className: \"custom-content-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 714\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 715\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 716\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717\n          },\n          __self: this\n        }, \"Weight of Sample Taken for Testing (A)\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_sample_testing\",\n          value: this.state.weight_sample_testing,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 734\n          },\n          __self: this\n        }, \"Weight of Sample Retained After Sieving (B)\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 737\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_sample_sieving\",\n          value: this.state.weight_sample_sieving,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 738\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 751\n          },\n          __self: this\n        }, \"Material Passing\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }), \"(A-B)/A*100\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 756\n          },\n          __self: this\n        }, display_total_amount)), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick(e) {\n            return _this2.totalshow(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762\n          },\n          __self: this\n        }, \"Total\"))))));\n        formtext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 775\n          },\n          __self: this\n        }, uppercardinfo14);\n        formheadertext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 780\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781\n          },\n          __self: this\n        }, \"Test Format - RF:14 (Determination of Silt content by wet sieving  )\", \" \"));\n      } else {\n        buttontitle = \"click to see RF 14\";\n        testformtext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"below-custom-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793\n          },\n          __self: this\n        }, \"Test Details\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 794\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 795\n          },\n          __self: this\n        }))), React.createElement(\"form\", {\n          className: \"custom-content-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 798\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802\n          },\n          __self: this\n        }, \"Weight of Sample Taken for Testing (A)\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_sample_testing\",\n          value: this.state.weight_sample_testing,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 817\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 818\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819\n          },\n          __self: this\n        }, \"Weight of Sample Retained After Sieving (B)\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"inputPassword\",\n          name: \"weight_sample_sieving\",\n          value: this.state.weight_sample_sieving,\n          onChange: function onChange(e) {\n            return _this2.change(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 823\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 835\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"inputPassword\",\n          class: \"col-sm-4 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836\n          },\n          __self: this\n        }, \"Material Passing\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838\n          },\n          __self: this\n        }), \"(A-B)/A*100\"), React.createElement(\"div\", {\n          class: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 841\n          },\n          __self: this\n        }, display_total_amount)), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick(e) {\n            return _this2.totalshow(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 847\n          },\n          __self: this\n        }, \"Total\"))))));\n        formtext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860\n          },\n          __self: this\n        }, uppercardinfo13);\n        formheadertext = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 865\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 866\n          },\n          __self: this\n        }, \"Test Format - RF:13 (Determination of Silt content by volume )\", \" \"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"skin-blue fixed-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row page-titles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 align-self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        class: \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"breadcrumb-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        className: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }, \"Add Aggregate\")))))), React.createElement(\"div\", {\n        className: \"product-form-upper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"below-custom-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-btn-lists\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ParticleSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, \"Particle Size\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestEight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, \"Flakiness Index\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestSeven\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, \"Elongation Index\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      }, buttontext))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        },\n        __self: this\n      }, \"Gravity and Water abs\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestThree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955\n        },\n        __self: this\n      }, \"Surface Moisture\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestFour\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965\n        },\n        __self: this\n      }, \"Compaction\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestFive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }, \"Crushing\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: process.env.PUBLIC_URL + \"/ViewTestSix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      }, \"Bulk Density\"))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center center-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: this.showformhandle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }, buttontitle), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, formheadertext, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013\n        },\n        __self: this\n      }, \"Add Aggregate\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        },\n        __self: this\n      }))), formtext), testformtext, React.createElement(\"div\", {\n        className: \"below-custom-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, \"More Details\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        className: \"custom-content-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputPassword\",\n        class: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036\n        },\n        __self: this\n      }, \"PTO's Comment\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        class: \"form-control\",\n        id: \"inputPassword\",\n        name: \"pto_comment\",\n        value: this.state.pto_comment,\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }))))), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }, \"* This Fields are Mandatory . \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }), sbmtbtn, btnmsg), React.createElement(SuccessModal, {\n        visible: this.state.visible,\n        width: this.props.width,\n        height: this.props.height,\n        effect: this.props.effect,\n        onClickAway: function onClickAway() {\n          return _this2.closeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Aggregate;\n}(Component);\nexport default Aggregate;","map":{"version":3,"sources":["/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/src/components/Test/Testone.js"],"names":["React","Component","Link","Redirect","withRouter","NavLink","axios","authService","axiosService","API_URL","SimpleReactValidator","SupplierSuggestions","SuccessModal","initialState","btnstatus","query","supplier","source","sample_location","weight","agg_type","agg_type1","agg_type2","agg_type3","weight_balance","weight_sample_testing","weight_sample_sieving","material_passing","pto_comment","total","plant","supl","Aggregate","props","componentWillMount","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","console","log","state","date","change","e","setState","target","name","value","getInfo","vendor_name","get","defaults","headers","common","localStorage","getItem","response","data","success","VENDOR_NAME","handleInputChange","length","totalshow","preventDefault","total_sample_sieving","total_sample_testing","total_amount","toFixed","amount_status","formstatus","uppercardstatus","onSubmit","bind","validator","doesShow","visible","event","allValid","tokenvalue","type","body","openModal","post","history","push","alert","showMessages","forceUpdate","sbmtbtn","btnmsg","uppercardinfo13","uppercardinfo14","map","item","id","message","buttontext","match","url","fontWeight","fontStyle","color","display_total_amount","buttontitle","formtext","testformtext","formheadertext","textAlign","process","env","PUBLIC_URL","showformhandle","width","height","effect","closeModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Redirect, withRouter, NavLink } from \"react-router-dom\";\nimport \"./Test.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport axiosService from \"../../services/axios-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport SupplierSuggestions from './SupplierSuggestion'\nimport { SuccessModal } from \"./SuccessModal\";\n\nconst initialState = {\n  btnstatus : false,\n  query: '',\n  supplier: \"\",\n  source: \"\",\n  sample_location: \"\",\n  weight: \"\",\n  agg_type: \"\",\n  agg_type1: \"\",\n  agg_type2: \"\",\n  agg_type3: \"\",\n  weight_balance: \"\",\n  weight_sample_testing: \"\",\n  weight_sample_sieving: \"\",\n  material_passing: \"\",\n  pto_comment: \"\",\n  total: \"\",\n  plant: \"\",  \n  supl:[]\n};\n\nexport class Aggregate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState, formstatus: false,  amount_status: false,uppercardstatus : true\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validator = new SimpleReactValidator();\n  }\n  componentWillMount = () => {\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n    console.log(\"date here\", today);\n    this.state.date = today;\n    console.log(this.state.date);\n  };\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  showformhandle() {\n    const doesShow = this.state.formstatus;\n    this.setState({ formstatus: !doesShow });\n    this.setState(initialState)\n  }\n  getInfo = async () => {\n    try {\n      let vendor_name = this.state.query\n      const response = await axios.get(\n        `${API_URL}master/vendor_search?VENDOR_NAME=${vendor_name}`,\n        (axios.defaults.headers.common[\"x-access-token\"] = localStorage.getItem(\"token\"))\n      );\n     // console.log(response.data.User);\n      //console.log(this.state.supl);\n      console.log('response hwew', response)\n\n      if (response.data.success) {\n        await this.setState({\n          supl: response.data.VENDOR_NAME\n        })\n        console.log(this.state.supl);\n      }\n      // this.parseJSON(this.state)\n    } catch (error) {\n      console.log(error);\n    }\n      \n    \n  }\n  openModal() {\n    this.setState({\n        visible : true\n    });\n}\n\n  closeModal() {\n    this.setState({\n        visible : false\n    });\n  }\n  handleInputChange = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      query: e.target.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      } else if (!this.state.query) {\n      }\n    })\n  }\n\n  async onSubmit(event) {\n    event.preventDefault();\n    if (this.validator.allValid()) {\n      let tokenvalue = localStorage.getItem(\"token\");\n      let type;\n      if(this.state.formstatus)\n      {\n        type = 'RF_14'\n      }\n      else\n      {\n        type = 'RF_13'\n      }\n      let body = {\n        supplier: this.state.query,\n        source: this.state.source,\n        sample_location: this.state.sample_location,\n        weight: this.state.weight,\n        agg_type: this.state.agg_type,\n        weight_balance: this.state.weight_balance,\n        weight_sample_testing: this.state.weight_sample_testing,\n        weight_sample_sieving: this.state.weight_sample_sieving,\n        material_passing: this.state.total,\n        pto_comment: this.state.pto_comment,\n        plant: localStorage.getItem(\"plant_name\"),\n        date: this.state.date,\n        type: type\n      };\n      console.log(body);\n      this.openModal();\n      this.setState({\n        btnstatus : true\n      })\n      try {\n        const response = await axios.post(\n          `${API_URL}rf_form/submit`,\n          body,\n          (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n        );\n        console.log(response);\n        //   .then(console.log(this.state));\n\n        if (response.data==='success') {\n          // alert(response.data);\n          this.props.history.push(\"/ViewTestOne\");\n        } else {\n          alert(response.data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      this.validator.showMessages();\n      // rerender to show messages for the first time\n      this.forceUpdate();\n    }\n  }\n  totalshow = e => {\n    e.preventDefault();\n    let total_sample_sieving = this.state.weight_sample_sieving;\n    let total_sample_testing = this.state.weight_sample_testing;\n    let total_amount =\n      ((total_sample_testing - total_sample_sieving) / total_sample_testing) *\n      100;\n   \n    this.state.total =total_amount.toFixed(2) ;\n    console.log(total_amount);\n    this.setState({\n      amount_status: true\n    });\n  };\n  render() {\n     // let showmodal;\n     let sbmtbtn, btnmsg, uppercardinfo13, uppercardinfo14;\n\n     if(this.state.uppercardstatus)\n     {\n       uppercardinfo13 = (\n         <div>\n<form className=\"custom-content-form\">\n            <div className=\"form-row\">\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Plant\n                  </label>\n                  <div class=\"col-sm-10\">\n                    {localStorage.getItem(\"plant_name\")}\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    date\n                  </label>\n                  <div class=\"col-sm-10\">{this.state.date}</div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Supplier\n                  </label>\n                  <div class=\"col-sm-10\">\n                  <input list=\"browsers\" name=\"query\"  \n                      value={this.state.query}\n                      onChange={e=> this.handleInputChange(e)} className=\"form-control\" />\n                 \n                 <datalist id=\"browsers\">\n    {\n              this.state.supl ?\n              this.state.supl.map(function(item, id) {\n                return(\n                \n                    \n        <option value={item.VENDOR_NAME} key={id}/>\n       \n      )\n              }\n      )\n              :\n              <span>Data is loading....</span>\n            }\n            </datalist>\n            <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"supplier\",\n                          this.state.query,\n                          \"required\"\n                        )}\n                      </span>\n                      \n   \n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Source\n                  </label>\n                  <div class=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"source\"\n                      value={this.state.source}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"source\",\n                          this.state.source,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Sampling Location\n                  </label>\n                  <div class=\"col-sm-10\">\n                  <select className=\"form-control\" onChange={e => this.change(e)} value={this.state.sample_location} name=\"sample_location\">\n                  <option value=\"None\">Choose...</option>\n                    <option value=\"Truck\">Truck</option>\n                    <option value=\"Bin\">Bin</option>\n                    <option value=\"StockYard\">StockYard</option>\n                  </select>\n                  <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"sample location\",\n                          this.state.sample_location,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label\n                    for=\"inputSubcategory\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Weight of Sample For Testing\n                  </label>\n                  <div class=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"weight\"\n                      value={this.state.weight}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \" Weight of sample for testing\",\n                          this.state.weight,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-3 col-form-label\">\n                    Aggregate Type\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <div class=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"River Sand\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        River Sand\n                      </label>\n                    </div>\n                    {/* <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"Crushed Sand\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        Crushed Sand\n                      </label>\n                    </div> */}\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"Crushed Rock Fines\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        Crushed Rock Fines\n                      </label>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"aggregate type\",\n                          this.state.agg_type,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-3 col-form-label\">\n                    Weighing Balance Details\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"weight_balance\"\n                      value={this.state.weight_balance}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"weight balance details\",\n                          this.state.weight_balance,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n         </div>\n       )\n\n       uppercardinfo14 = (\n         <div>\n           <form className=\"custom-content-form\" autoComplete='OFF'>\n            <div className=\"form-row\">\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Plant\n                  </label>\n                  <div class=\"col-sm-10\">\n                    {localStorage.getItem(\"plant_name\")}\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    date\n                  </label>\n                  <div class=\"col-sm-10\">{this.state.date}</div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Supplier\n                  </label>\n                  <div class=\"col-sm-10\">\n                  <input list=\"browsers\" name=\"query\"  \n                      value={this.state.query}\n                      onChange={e=> this.handleInputChange(e)} className=\"form-control\" />\n                 \n                 <datalist id=\"browsers\">\n    {\n              this.state.supl ?\n              this.state.supl.map(function(item, id) {\n                return(\n                \n                    \n        <option value={item.VENDOR_NAME} key={id}/>\n       \n      )\n              }\n      )\n              :\n              <span>Data is loading....</span>\n            }\n            </datalist>\n                       \n            <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"supplier\",\n                          this.state.query,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Source\n                  </label>\n                  <div class=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"source\"\n                      value={this.state.source}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"source\",\n                          this.state.source,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">\n                    Sampling Location\n                  </label>\n                  <div class=\"col-sm-10\">\n                  <select className=\"form-control\" onChange={e => this.change(e)} value={this.state.sample_location} name=\"sample_location\">\n                  <option value=\"None\">Choose...</option>\n                    <option value=\"Truck\">Truck</option>\n                    <option value=\"Bin\">Bin</option>\n                    <option value=\"StockYard\">StockYard</option>\n                  </select>\n                  <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"sample location\",\n                          this.state.sample_location,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label\n                    for=\"inputSubcategory\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Weight of Sample For Testing\n                  </label>\n                  <div class=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"weight\"\n                      value={this.state.weight}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \" Weight of sample for testing\",\n                          this.state.weight,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-3 col-form-label\">\n                    Aggregate Type\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <div class=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"River Sand\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        River Sand\n                      </label>\n                    </div>\n                    {/* <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"Crushed Sand\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        Crushed Sand\n                      </label>\n                    </div> */}\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        id=\"inlineCheckbox1\"\n                        value=\"Crushed Rock Fines\"\n                        name=\"agg_type\"\n                        onClick={e => this.change(e)}\n                      />\n                      <label className=\"form-check-label\" for=\"inlineCheckbox1\">\n                        Crushed Rock Fines\n                      </label>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"aggregate type\",\n                          this.state.agg_type,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-3 col-form-label\">\n                    Weighing Balance Details\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"inputPassword\"\n                      name=\"weight_balance\"\n                      value={this.state.weight_balance}\n                      onChange={e => this.change(e)}\n                    />\n                    <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"weight balance details\",\n                          this.state.weight_balance,\n                          \"required\"\n                        )}\n                      </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n         </div>\n       )\n     }\n     if(this.state.visible)\n     {\n       // showmodal = (\n       //   <div>\n       //     <SuccessModal  \n       //          visible={this.state.visible}\n       //               width={this.props.width}\n       //               height={this.props.height}\n       //               effect={this.props.effect}\n       //               onClickAway={() => this.closeModal()} />\n       //   </div>\n       // )\n     }\n     if(this.state.btnstatus)\n     {\n       sbmtbtn = (\n         <button\n         class=\"btn btn-primary\"\n         onClick={this.onSubmit.bind(this)}\n         disabled\n       >\n         Submit\n       </button>\n       )\n       btnmsg = (\n         <div>\n         <hr />\n         <p>Your Form Has Already Been Submitted.Please Don't Click SUMBIT Button AGAIN!!</p>\n         </div>\n       )\n     }\n     else\n     {\n       sbmtbtn=(\n         <button\n         class=\"btn btn-primary\"\n         onClick={this.onSubmit.bind(this)}\n       >\n         Submit\n       </button>\n       )\n     }\n    let buttontext;\n    if (this.props.match.url == \"/Testone\") {\n      buttontext = (\n        <span\n          style={{\n            fontWeight: \"bold\",\n            fontStyle: \"italic\",\n            color: \"forestgreen\"\n          }}\n        >\n          Slit Content\n        </span>\n      );\n    }\n    let display_total_amount;\n    if (this.state.amount_status == true) {\n      display_total_amount = <div>{this.state.total} %</div>;\n    } else {\n      display_total_amount = (\n        <div>\n          <p>Enter The Above Fields</p>\n        </div>\n      );\n    }\n    let buttontitle = \"click to see RF 14\";\n    let formtext;\n    let testformtext;\n    let formheadertext;\n    if (this.state.formstatus) {\n      buttontitle = \"click to see RF 13\";\n      testformtext = (\n        <div>\n          <div className=\"below-custom-form\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <h3>Test Details</h3>\n                <hr />\n                <br />\n              </div>\n            </div>\n            <form className=\"custom-content-form\">\n              <div className=\"form-row\">\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Weight of Sample Taken for Testing (A)\n                    </label>\n                    <div class=\"col-sm-8\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"inputPassword\"\n                        name=\"weight_sample_testing\"\n                        value={this.state.weight_sample_testing}\n                        onChange={e => this.change(e)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Weight of Sample Retained After Sieving (B)\n                    </label>\n                    <div class=\"col-sm-8\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"inputPassword\"\n                        name=\"weight_sample_sieving\"\n                        value={this.state.weight_sample_sieving}\n                        onChange={e => this.change(e)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Material Passing\n                      <br />\n                      (A-B)/A*100\n                    </label>\n                    <div class=\"col-sm-8\">\n                      {/* <p>para here </p> */}\n                      {display_total_amount}\n                      {/* {this.state.total || 'NO DATA'} */}\n                    </div>\n                  </div>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={e => this.totalshow(e)}\n                  >\n                    Total\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n      formtext = (\n        <div>\n        {uppercardinfo14}\n        </div>\n      );\n      formheadertext = (\n        <div>\n          <p style={{ textAlign: \"center\" }}>\n            Test Format - RF:14 (Determination of Silt content by wet sieving  ){\" \"}\n          </p>\n        </div>\n      );\n    } else {\n      buttontitle = \"click to see RF 14\";\n      testformtext = (\n        <div>\n          <div className=\"below-custom-form\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <h3>Test Details</h3>\n                <hr />\n                <br />\n              </div>\n            </div>\n            <form className=\"custom-content-form\">\n              <div className=\"form-row\">\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Weight of Sample Taken for Testing (A)\n                    </label>\n                    <div class=\"col-sm-8\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"inputPassword\"\n                        name=\"weight_sample_testing\"\n                        value={this.state.weight_sample_testing}\n                        onChange={e => this.change(e)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Weight of Sample Retained After Sieving (B)\n                    </label>\n                    <div class=\"col-sm-8\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"inputPassword\"\n                        name=\"weight_sample_sieving\"\n                        value={this.state.weight_sample_sieving}\n                        onChange={e => this.change(e)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-12\">\n                  <div class=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                      Material Passing\n                      <br />\n                      (A-B)/A*100\n                    </label>\n                    <div class=\"col-sm-8\">\n                      {/* <p>para here </p> */}\n                      {display_total_amount}\n                      {/* {this.state.total || 'NO DATA'} */}\n                    </div>\n                  </div>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={e => this.totalshow(e)}\n                  >\n                    Total\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n      formtext = (\n        <div>\n          {uppercardinfo13}\n        </div>\n      );\n      formheadertext = (\n        <div>\n          <p style={{ textAlign: \"center\" }}>\n            Test Format - RF:13 (Determination of Silt content by volume ){\" \"}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"skin-blue fixed-layout\">\n        <div className=\"page-wrapper\">\n          <div className=\"container-fluid\">\n            <div className=\"row page-titles\">\n              <div className=\"col-md-5 align-self-center\">\n                {/* <h4 className=\"text-themecolor\">Forms</h4> */}\n                <nav aria-label=\"breadcrumb\">\n                  <ol class=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Add Aggregate\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n\n          {/*Form content begin */}\n\n          <div className=\"product-form-upper\">\n            <div className=\"container-fluid\">\n              <div className=\"below-custom-form\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div className=\"custom-btn-lists\">\n                      <ul>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ParticleSize\"}\n                            >\n                              Particle Size\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestEight\"}\n                            >\n                              Flakiness Index\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestSeven\"}\n                            >\n                              Elongation Index\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestOne\"}\n                            >\n                              {buttontext}\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestTwo\"}\n                            >\n                              Gravity and Water abs\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestThree\"}\n                            >\n                              Surface Moisture\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestFour\"}\n                            >\n                              Compaction\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestFive\"}\n                            >\n                              Crushing\n                            </NavLink>\n                          </button>\n                        </li>\n                        <li>\n                          <button className=\"btn btn-info\">\n                            <NavLink\n                              activeClassName=\"selected\"\n                              to={process.env.PUBLIC_URL + \"/ViewTestSix\"}\n                            >\n                              Bulk Density\n                            </NavLink>\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n\n                    <hr />\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center center-block\">\n                      <button\n                        className=\"btn btn-info\"\n                        onClick={this.showformhandle.bind(this)}\n                      >\n                        {buttontitle}\n                      </button>\n                      <hr />\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    {formheadertext}\n                    <hr />\n                  </div>\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <h3>Add Aggregate</h3>\n                    <hr />\n                    <br />\n                  </div>\n                </div>\n                {formtext}\n              </div>\n              {/*etst detial form */}\n              {testformtext}\n              {/*end test detail form */}\n              {/*comment pto */}\n              <div className=\"below-custom-form\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <h3>More Details</h3>\n                    <hr />\n                    <br />\n                  </div>\n                </div>\n                <form className=\"custom-content-form\">\n                  <div className=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <div class=\"form-group row\">\n                        <label\n                          for=\"inputPassword\"\n                          class=\"col-sm-2 col-form-label\"\n                        >\n                          PTO's Comment\n                        </label>\n                        <div class=\"col-sm-10\">\n                          <textarea\n                            class=\"form-control\"\n                            id=\"inputPassword\"\n                            name=\"pto_comment\"\n                            value={this.state.pto_comment}\n                            onChange={e => this.change(e)}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <small>* This Fields are Mandatory . </small>\n                  <br />\n                  {sbmtbtn}\n                \n                {btnmsg}\n                </form>\n                 {/*modal experiment */}\n               {/* {showmodal} */}\n               \n              \n               <SuccessModal  \n               visible={this.state.visible}\n                    width={this.props.width}\n                    height={this.props.height}\n                    effect={this.props.effect}\n                    onClickAway={() => this.closeModal()} />\n                {/*end model experiment */}\n              </div>\n              {/*end comment pto */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Aggregate;\n"]},"metadata":{},"sourceType":"module"}