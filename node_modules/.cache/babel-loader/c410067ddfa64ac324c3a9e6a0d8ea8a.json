{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/src/components/Plant/Plant.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./Plant.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nexport var Plant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Plant, _Component);\n\n  function Plant(props) {\n    var _this;\n\n    _classCallCheck(this, Plant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plant).call(this, props));\n\n    _this.change = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.getWebsite = function () {\n      fetch(\"/\").then(console.log(_this.state));\n    };\n\n    _this.state = {\n      plantId: \"\",\n      plantName: \"\",\n      city: \"\",\n      areadata: [],\n      regiondata: [],\n      area_id: \"\",\n      region_id: \"\" //    pin : \"\"\n\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator();\n    return _this;\n  }\n\n  _createClass(Plant, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleClick();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function () {\n      var _handleClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var tokenvalue, response, _response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenvalue = localStorage.getItem(\"token\");\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get(\"\".concat(API_URL, \"region/view\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue);\n\n              case 4:\n                response = _context.sent;\n                console.log(response);\n\n                if (response.data.success) {\n                  this.setState({\n                    regiondata: response.data.Regiondata\n                  });\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 12:\n                _context.prev = 12;\n                _context.next = 15;\n                return axios.get(\"\".concat(API_URL, \"area/view\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue);\n\n              case 15:\n                _response = _context.sent;\n                console.log(_response);\n\n                if (_response.data.success) {\n                  this.setState({\n                    areadata: _response.data.Area\n                  });\n                }\n\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t1 = _context[\"catch\"](12);\n                console.log(_context.t1);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9], [12, 20]]);\n      }));\n\n      function handleClick() {\n        return _handleClick.apply(this, arguments);\n      }\n\n      return handleClick;\n    }()\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var tokenvalue, body, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tokenvalue = localStorage.getItem(\"token\");\n                event.preventDefault();\n\n                if (!this.validator.allValid()) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                console.log(this.state);\n                body = {\n                  plantId: this.state.plantId,\n                  plantName: this.state.plantName,\n                  city: this.state.city,\n                  area_id: this.state.area_id\n                };\n                _context2.prev = 5;\n                _context2.next = 8;\n                return axios.post(\"\".concat(API_URL, \"plant/add\"), body, axios.defaults.headers.common[\"x-access-token\"] = tokenvalue);\n\n              case 8:\n                response = _context2.sent;\n                console.log(response);\n\n                if (response.data.success) {\n                  alert(response.data.msg);\n                  this.props.history.push(\"/ViewPlant\");\n                } else {\n                  alert(response.data.msg);\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](5);\n                alert(_context2.t0); //  console.log(error)\n\n              case 16:\n                _context2.next = 20;\n                break;\n\n              case 18:\n                this.validator.showMessages(); // rerender to show messages for the first time\n\n                this.forceUpdate();\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 13]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var i = 1;\n      return React.createElement(\"div\", {\n        className: \"skin-blue fixed-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row page-titles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 align-self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        class: \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"breadcrumb-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        className: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Add Plant\")))))), React.createElement(\"div\", {\n        className: \"product-form-upper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"below-custom-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Add Plant\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        className: \"custom-content-form\",\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Plant ID\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.plantId,\n        name: \"plantId\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.validator.message(\"plant id\", this.state.plantId, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Plant Name\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.plantName,\n        name: \"plantName\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.validator.message(\"plant name\", this.state.plantName, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Under City\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.city,\n        name: \"city\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.validator.message(\"city name\", this.state.city, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Under Region\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.region_id,\n        name: \"region_id\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Select One\"), this.state.regiondata ? this.state.regiondata.map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.region_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, item.region_name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Data is loading....\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Under Area\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.area_id,\n        name: \"area_id\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Select One\"), this.state.areadata ? this.state.areadata.filter(function (item) {\n        return item.region_id == _this2.state.region_id;\n      }).map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.area_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, item.area_name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Data is loading....\")), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.validator.message(\"area\", this.state.area_id, \"required\")))), React.createElement(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return Plant;\n}(Component);\nexport default Plant;","map":{"version":3,"sources":["/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/src/components/Plant/Plant.js"],"names":["React","Component","Link","Redirect","axios","authService","API_URL","SimpleReactValidator","Plant","props","change","e","setState","target","name","value","getWebsite","fetch","then","console","log","state","plantId","plantName","city","areadata","regiondata","area_id","region_id","onSubmit","bind","validator","handleClick","tokenvalue","localStorage","getItem","get","defaults","headers","common","response","data","success","Regiondata","Area","event","preventDefault","allValid","body","post","alert","msg","history","push","showMessages","forceUpdate","i","process","env","PUBLIC_URL","message","map","item","id","region_name","filter","area_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./Plant.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nexport class Plant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plantId: \"\",\n      plantName: \"\",\n      city: \"\",\n      areadata: [],\n      regiondata: [],\n      area_id: \"\",\n      region_id : \"\"\n      //    pin : \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validator = new SimpleReactValidator();\n  }\n  componentDidMount() {\n    this.handleClick();\n  }\n  async handleClick() {\n    let tokenvalue = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.get(\n        `${API_URL}region/view`,\n        (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n      );\n\n      console.log(response);\n      if (response.data.success) {\n        this.setState({ regiondata: response.data.Regiondata });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    //area list here\n    try {\n      const response = await axios.get(\n        `${API_URL}area/view`,\n        (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n      );\n      console.log(response);\n      if (response.data.success) {\n        this.setState({ areadata: response.data.Area });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  getWebsite = () => {\n    fetch(\"/\").then(console.log(this.state));\n  };\n  async onSubmit(event) {\n    let tokenvalue = localStorage.getItem(\"token\");\n    event.preventDefault();\n    if (this.validator.allValid()) {\n      console.log(this.state);\n      let body = {\n        plantId: this.state.plantId,\n      plantName: this.state.plantName,\n      city: this.state.city,\n      area_id: this.state.area_id\n      };\n      try {\n        const response = await axios.post(\n          `${API_URL}plant/add`,\n          body,\n          (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n        );\n        console.log(response);\n\n          if (response.data.success) {\n            alert(response.data.msg);\n            this.props.history.push(\"/ViewPlant\");\n          } else {\n            alert(response.data.msg);\n          }\n      } catch (error) {\n       alert(error);\n      //  console.log(error)\n      }\n    } else {\n      this.validator.showMessages();\n      // rerender to show messages for the first time\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    let i = 1;\n    return (\n      <div className=\"skin-blue fixed-layout\">\n        <div className=\"page-wrapper\">\n          <div className=\"container-fluid\">\n            <div className=\"row page-titles\">\n              <div className=\"col-md-5 align-self-center\">\n                {/* <h4 className=\"text-themecolor\">Forms</h4> */}\n                <nav aria-label=\"breadcrumb\">\n                  <ol class=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Add Plant\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n\n          {/*Form content begin */}\n\n          <div className=\"product-form-upper\">\n            <div className=\"container\">\n              <div className=\"below-custom-form\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <h3>Add Plant</h3>\n                    <hr />\n                    <br />\n                  </div>\n                </div>\n                <form className=\"custom-content-form\" method=\"POST\">\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Plant ID\n                    </label>\n                    <div class=\"col-sm-10\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.plantId}\n                        name=\"plantId\"\n                        onChange={e => this.change(e)}\n                      />\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"plant id\",\n                          this.state.plantId,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Plant Name\n                    </label>\n                    <div class=\"col-sm-10\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.plantName}\n                        name=\"plantName\"\n                        onChange={e => this.change(e)}\n                      />\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"plant name\",\n                          this.state.plantName,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Under City\n                    </label>\n                    <div class=\"col-sm-10\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.city}\n                        name=\"city\"\n                        onChange={e => this.change(e)}\n                      />\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"city name\",\n                          this.state.city,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Under Region\n                    </label>\n                    <div class=\"col-sm-10\">\n                      <select\n                        className=\"form-control\"\n                        value={this.state.region_id}\n                        name=\"region_id\"\n                        onChange={e => this.change(e)}\n                      >\n                        <option>Select One</option>\n                        {this.state.regiondata ? (\n                          this.state.regiondata.map(function(item, id) {\n                            return (\n                              <option key={id} value={item.region_id}>\n                                {item.region_name}\n                              </option>\n                            );\n                          })\n                        ) : (\n                          <span>Data is loading....</span>\n                        )}\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Under Area\n                    </label>\n                    <div class=\"col-sm-10\">\n                      <select\n                        className=\"form-control\"\n                        value={this.state.area_id}\n                        name=\"area_id\"\n                        onChange={e => this.change(e)}\n                      >\n                        <option>Select One</option>\n                        {this.state.areadata ? (\n                          this.state.areadata.filter(item => item.region_id == this.state.region_id).map(function(item, id) {\n                            return (\n                              <option key={id} value={item.area_id}>\n                                {item.area_name}\n                              </option>\n                            );\n                          })\n                        ) : (\n                          <span>Data is loading....</span>\n                        )}\n                      </select>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"area\",\n                          this.state.area_id,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n\n                  <button class=\"btn btn-primary\" onClick={this.onSubmit}>\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Plant;\n"]},"metadata":{},"sourceType":"module"}