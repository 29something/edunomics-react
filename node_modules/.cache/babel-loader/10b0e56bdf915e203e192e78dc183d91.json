{"ast":null,"code":"import _classCallCheck from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as jwt from \"jsonwebtoken\";\nimport * as moment from \"moment\";\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    this.tokenKey = \"tokenKey\";\n  }\n\n  _createClass(AuthService, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return localStorage.getItem(this.tokenKey);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(token) {\n      return jwt.decode(token);\n    } // saveToken(token) {\n    //   localStorage.setItem(this.tokenKey, token);\n    // }\n\n  }, {\n    key: \"invalidateUser\",\n    value: function invalidateUser() {\n      localStorage.removeItem(this.tokenKey);\n    }\n  }, {\n    key: \"getExpiration\",\n    value: function getExpiration(token) {\n      var exp = this.decode(token).exp;\n      return moment.unix(exp);\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() {\n      return this.decode(this.getToken()).username;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(token) {\n      return moment().isBefore(this.getExpiration(token));\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var token = this.getToken();\n      return token && this.isValid(token) ? true : false;\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/chitranshagnihotri/Downloads/RDC-Concrete-master/src/services/auth-service.js"],"names":["jwt","moment","AuthService","tokenKey","localStorage","getItem","token","decode","removeItem","exp","unix","getToken","username","isBefore","getExpiration","isValid"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;IAEMC,W;;;;;;SACJC,Q,GAAW,U;;;;;+BAEA;AACT,aAAOC,YAAY,CAACC,OAAb,CAAqB,KAAKF,QAA1B,CAAP;AACD;;;2BAEMG,K,EAAO;AACZ,aAAON,GAAG,CAACO,MAAJ,CAAWD,KAAX,CAAP;AACD,K,CAED;AACA;AACA;;;;qCAEiB;AACfF,MAAAA,YAAY,CAACI,UAAb,CAAwB,KAAKL,QAA7B;AACD;;;kCAEaG,K,EAAO;AACnB,UAAMG,GAAG,GAAG,KAAKF,MAAL,CAAYD,KAAZ,EAAmBG,GAA/B;AAEA,aAAOR,MAAM,CAACS,IAAP,CAAYD,GAAZ,CAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKF,MAAL,CAAY,KAAKI,QAAL,EAAZ,EAA6BC,QAApC;AACD;;;4BAEON,K,EAAO;AACb,aAAOL,MAAM,GAAGY,QAAT,CAAkB,KAAKC,aAAL,CAAmBR,KAAnB,CAAlB,CAAP;AACD;;;sCAEiB;AAChB,UAAMA,KAAK,GAAG,KAAKK,QAAL,EAAd;AAEA,aAAOL,KAAK,IAAI,KAAKS,OAAL,CAAaT,KAAb,CAAT,GAA+B,IAA/B,GAAsC,KAA7C;AACD;;;;;;AAGH,eAAe,IAAIJ,WAAJ,EAAf","sourcesContent":["import * as jwt from \"jsonwebtoken\";\nimport * as moment from \"moment\";\n\nclass AuthService {\n  tokenKey = \"tokenKey\";\n\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  decode(token) {\n    return jwt.decode(token);\n  }\n\n  // saveToken(token) {\n  //   localStorage.setItem(this.tokenKey, token);\n  // }\n\n  invalidateUser() {\n    localStorage.removeItem(this.tokenKey);\n  }\n\n  getExpiration(token) {\n    const exp = this.decode(token).exp;\n\n    return moment.unix(exp);\n  }\n\n  getUsername() {\n    return this.decode(this.getToken()).username;\n  }\n\n  isValid(token) {\n    return moment().isBefore(this.getExpiration(token));\n  }\n\n  isAuthenticated() {\n    const token = this.getToken();\n\n    return token && this.isValid(token) ? true : false;\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}