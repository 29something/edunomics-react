{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/src/components/Plant/PlantAllocate.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport \"./Plant.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport axiosService from \"../../services/axios-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nexport var PlantAllocate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlantAllocate, _Component);\n\n  function PlantAllocate(props) {\n    var _this;\n\n    _classCallCheck(this, PlantAllocate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlantAllocate).call(this, props));\n\n    _this.change = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      uid: \"\",\n      region_id: \"\",\n      from_date: \"\",\n      to_date: \"\",\n      area_id: \"\",\n      plant_id: \"\",\n      userdata: [],\n      employee: [],\n      area: [],\n      plant: []\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator();\n    return _this;\n  }\n\n  _createClass(PlantAllocate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.region();\n    }\n  }, {\n    key: \"region\",\n    value: function () {\n      var _region = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var tokenvalue, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenvalue = localStorage.getItem(\"token\");\n                console.log('value', tokenvalue);\n                _context.prev = 2;\n                _context.next = 5;\n                return Promise.all([axios.get(\"\".concat(API_URL, \"region/view\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue), axios.get(\"\".concat(API_URL, \"employee/view_pto\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue), axios.get(\"\".concat(API_URL, \"area/view\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue), axios.get(\"\".concat(API_URL, \"plant/view\"), axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)]);\n\n              case 5:\n                response = _context.sent;\n                console.log(response[3].data);\n\n                if (!(response.length > 0)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.setState({\n                  userdata: response[0].data.Regiondata,\n                  employee: response[1].data.User,\n                  area: response[2].data.Area,\n                  plant: response[3].data.Plant\n                });\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0.response);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n\n      function region() {\n        return _region.apply(this, arguments);\n      }\n\n      return region;\n    }()\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var tokenvalue, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                tokenvalue = localStorage.getItem(\"token\");\n\n                if (!this.validator.allValid()) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                console.log(this.state);\n                _context2.prev = 4;\n                _context2.next = 7;\n                return axios.post(\"\".concat(API_URL, \"plant/user_plant\"), {\n                  uid: this.state.uid,\n                  pid: this.state.plant_id,\n                  start: this.state.from_date,\n                  // stop: this.state.to_date,\n                  status: 2\n                }, axios.defaults.headers.common[\"x-access-token\"] = tokenvalue);\n\n              case 7:\n                response = _context2.sent;\n                console.log(response);\n\n                if (response.data.success) {\n                  alert(response.data.msg);\n                  this.props.history.push(\"/AllocatedPlant\");\n                } else {\n                  alert(response.data.msg);\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.log(_context2.t0);\n\n              case 15:\n                _context2.next = 19;\n                break;\n\n              case 17:\n                this.validator.showMessages(); // rerender to show messages for the first time\n\n                this.forceUpdate();\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 12]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }() //   fileSelectedHandler = e => {\n    //       e.preventDefault();\n    //     let files = e.target.files;\n    //     console.log('data',files[0]);\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"skin-blue fixed-layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row page-titles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 align-self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        class: \"breadcrumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"breadcrumb-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        className: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Plant Allocation\")))))), React.createElement(\"div\", {\n        className: \"product-form-upper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"below-custom-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Plant Allocation\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        className: \"custom-content-form\",\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputPassword\",\n        class: \"col-sm-1 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Employee Name\"), React.createElement(\"div\", {\n        class: \"col-sm-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"uid\",\n        value: this.state.uid,\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"All Employee\"), this.state.employee ? this.state.employee.map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, item.name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Data is loading....\")), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.validator.message(\"name\", this.state.uid, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-1 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Region Name\"), React.createElement(\"div\", {\n        class: \"col-sm-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"region_id\",\n        value: this.state.region_id,\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"All Region\"), this.state.userdata ? this.state.userdata.map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.region_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, item.region_name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Data is loading....\")), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.validator.message(\"region\", this.state.region_id, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-1 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Area Name\"), React.createElement(\"div\", {\n        class: \"col-sm-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"area_id\",\n        value: this.state.area_id,\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"All Area\"), this.state.area ? this.state.area.filter(function (item) {\n        return item.region_id == _this2.state.region_id;\n      }).map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.area_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, item.area_name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Data is loading....\")), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, this.validator.message(\"area\", this.state.area_id, \"required\")))), React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-1 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Plant Name\"), React.createElement(\"div\", {\n        class: \"col-sm-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"plant_id\",\n        value: this.state.plant_id,\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"All Plant\"), this.state.plant ? this.state.plant.filter(function (item) {\n        return item.region_id == _this2.state.region_id && item.area_id == _this2.state.area_id;\n      }).map(function (item, id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: item.pid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, item.plant_name);\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Data is loading....\")), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, this.validator.message(\"plant name\", this.state.plant_id, \"required\")))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"inputSubcategory\",\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"From Date\"), React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        value: this.state.from_date,\n        name: \"from_date\",\n        onChange: function onChange(e) {\n          return _this2.change(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return PlantAllocate;\n}(Component);\nexport default PlantAllocate;","map":{"version":3,"sources":["/Users/chitranshagnihotri/Desktop/work/code/freelancer_react/Edunomics1/src/components/Plant/PlantAllocate.js"],"names":["React","Component","Link","withRouter","Redirect","axios","authService","axiosService","API_URL","SimpleReactValidator","PlantAllocate","props","change","e","setState","target","name","value","state","uid","region_id","from_date","to_date","area_id","plant_id","userdata","employee","area","plant","onSubmit","bind","validator","region","tokenvalue","localStorage","getItem","console","log","Promise","all","get","defaults","headers","common","response","data","length","Regiondata","User","Area","Plant","event","preventDefault","allValid","post","pid","start","status","success","alert","msg","history","push","showMessages","forceUpdate","process","env","PUBLIC_URL","map","item","id","message","region_name","filter","area_name","plant_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport \"./Plant.css\";\nimport axios from \"axios\";\nimport authService from \"../../services/auth-service\";\nimport axiosService from \"../../services/axios-service\";\nimport { API_URL } from \"../../services/url\";\nimport SimpleReactValidator from \"simple-react-validator\";\nexport class PlantAllocate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      region_id: \"\",\n      from_date: \"\",\n      to_date: \"\",\n      area_id: \"\",\n      plant_id: \"\",\n      userdata: [],\n      employee: [],\n      area: [],\n      plant:[]\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validator = new SimpleReactValidator();\n  }\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  componentDidMount() {\n    this.region();\n    \n  }\n\n  async region() {\n    let tokenvalue = localStorage.getItem(\"token\");\n    console.log('value', tokenvalue)\n    try {\n      const response = await Promise.all( [axios.get(\n        `${API_URL}region/view`,\n        (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n      ),axios.get(\n        `${API_URL}employee/view_pto`,\n        (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n        ),\n        axios.get(\n          `${API_URL}area/view`,\n          (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n        ),\n        axios.get(\n          `${API_URL}plant/view`,\n          (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n        )]);\n\n      console.log(response[3].data);\n      if (response.length>0) {\n       await this.setState({\n          userdata: response[0].data.Regiondata,\n          employee: response[1].data.User,\n          area: response[2].data.Area,\n          plant:response[3].data.Plant\n        });\n\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  }\n  async onSubmit(event) {\n    event.preventDefault();\n    let tokenvalue = localStorage.getItem(\"token\");\n    if (this.validator.allValid()) {\n    console.log(this.state);\n    try {\n      const response = await axios.post(\n        `${API_URL}plant/user_plant`,\n        {\n          uid: this.state.uid,\n          pid: this.state.plant_id,\n          start: this.state.from_date,\n          // stop: this.state.to_date,\n          status:2\n        },\n        (axios.defaults.headers.common[\"x-access-token\"] = tokenvalue)\n      );\n      console.log(response);\n\n        if (response.data.success) {\n          alert(response.data.msg);\n          this.props.history.push(\"/AllocatedPlant\");\n        } else {\n          alert(response.data.msg);\n        }\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    this.validator.showMessages();\n    // rerender to show messages for the first time\n    this.forceUpdate();\n  }\n  }\n\n  //   fileSelectedHandler = e => {\n  //       e.preventDefault();\n  //     let files = e.target.files;\n  //     console.log('data',files[0]);\n  //   }\n  render() {\n    return (\n      <div className=\"skin-blue fixed-layout\">\n        <div className=\"page-wrapper\">\n          <div className=\"container-fluid\">\n            <div className=\"row page-titles\">\n              <div className=\"col-md-5 align-self-center\">\n                {/* <h4 className=\"text-themecolor\">Forms</h4> */}\n                <nav aria-label=\"breadcrumb\">\n                  <ol class=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Plant Allocation\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n\n          {/*Form content begin */}\n\n          <div className=\"product-form-upper\">\n            <div className=\"container\">\n              <div className=\"below-custom-form\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <h3>Plant Allocation</h3>\n                    <br />\n                  </div>\n                </div>\n                <form className=\"custom-content-form\" method=\"POST\">\n                  <div className=\"form-group row\">\n                    <label for=\"inputPassword\" class=\"col-sm-1 col-form-label\">\n                      Employee Name\n                    </label>\n                    <div class=\"col-sm-11\">\n                    <select className=\"form-control\" name=\"uid\" value={this.state.uid}  onChange={e => this.change(e)}>\n                            <option>All Employee</option>\n                    {\n                              this.state.employee ?\n                              this.state.employee.map(function(item, id) {\n                                return(\n                                    \n                        <option key ={id} value={item.uid}>{item.name}</option>\n                      )\n                              }\n                      )\n                              :\n                              <span>Data is loading....</span>\n                            }\n\n                    </select>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"name\",\n                          this.state.uid,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-1 col-form-label\"\n                    >\n                      Region Name\n                    </label>\n                    <div class=\"col-sm-11\">\n                    <select className=\"form-control\" name=\"region_id\" value={this.state.region_id}  onChange={e => this.change(e)}>\n                                <option>All Region</option>\n                        {\n                                  this.state.userdata ?\n                                  this.state.userdata.map(function(item, id) {\n                                    return(\n                                        \n                            <option key ={id} value={item.region_id}>{item.region_name}</option>\n                          )\n                                  }\n                          )\n                                  :\n                                  <span>Data is loading....</span>\n                                }\n\n                        </select>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"region\",\n                          this.state.region_id,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-1 col-form-label\"\n                    >\n                      Area Name\n                    </label>\n                    <div class=\"col-sm-11\">\n                    <select className=\"form-control\" name=\"area_id\" value={this.state.area_id}  onChange={e => this.change(e)}>\n                                <option>All Area</option>\n                        {\n                                  this.state.area ?\n                            this.state.area.filter(item => item.region_id == this.state.region_id).map(function (item, id) {\n                              \n                                return (\n                                      \n                                  <option key={id} value={item.area_id}>{item.area_name}</option>\n                                )\n                              \n                                  }\n                          )\n                                  :\n                                  <span>Data is loading....</span>\n                                }\n\n                        </select>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"area\",\n                          this.state.area_id,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label\n                      for=\"inputSubcategory\"\n                      className=\"col-sm-1 col-form-label\"\n                    >\n                      Plant Name\n                    </label>\n                    <div class=\"col-sm-11\">\n                    <select className=\"form-control\" name=\"plant_id\" value={this.state.plant_id}  onChange={e => this.change(e)}>\n                                <option>All Plant</option>\n                        {\n                                  this.state.plant ?\n                                  this.state.plant.filter(item => item.region_id == this.state.region_id && item.area_id ==this.state.area_id).map(function(item, id) {\n                                    return(\n                                        \n                            <option key ={id} value={item.pid}>{item.plant_name}</option>\n                          )\n                                  }\n                          )\n                                  :\n                                  <span>Data is loading....</span>\n                                }\n\n                        </select>\n                      <span className=\"text-danger\">\n                        {this.validator.message(\n                          \"plant name\",\n                          this.state.plant_id,\n                          \"required\"\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <div class=\"form-group row\">\n                        <label\n                          for=\"inputSubcategory\"\n                          className=\"col-sm-2 col-form-label\"\n                        >\n                          From Date\n                        </label>\n                        <div class=\"col-sm-10\">\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={this.state.from_date}\n                            name=\"from_date\"\n                            onChange={e => this.change(e)}\n                          />\n                         \n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <div class=\"form-group row\">\n                        {/* <label\n                          for=\"inputSubcategory\"\n                          className=\"col-sm-2 col-form-label\"\n                        >\n                          To Date\n                        </label>\n                        <div class=\"col-sm-10\">\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={this.state.to_date}\n                            name=\"to_date\"\n                            onChange={e => this.change(e)}\n                          />\n                          \n                        </div> */}\n                      </div>\n                    </div>\n                  </div>\n                  <button class=\"btn btn-primary\" onClick={this.onSubmit}>\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlantAllocate;\n"]},"metadata":{},"sourceType":"module"}